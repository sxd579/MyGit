ctrl + alt +f2  调出 命令行
              +f7  调出 图形界面


shell ：

whereis +解释器名字      ///查询解释器路径
http://www.cnblogs.com/tnxk/archive/2012/08/09/2630195.html  脚本基础



vi操作
vi filename     //打开filename文件

:w              //保存文件

:w cszhi.com    //保存至cszhi.com文件

:q              //退出编辑器，如果文件已修改请使用下面的命令

:q!//退出编辑器，且不保存

:wq            //退出编辑器，且保存文件

a       //在当前光标位置的右边添加文本

i       //在当前光标位置的左边添加文本

A       //在当前行的末尾位置添加文本

I       //在当前行的开始处添加文本(非空字符的行首)

O       //在当前行的上面新建一行

o       //在当前行的下面新建一行

R       //替换(覆盖)当前光标位置及后面的若干文本

J       //合并光标所在行及下一行为一行(依然在命令模式)



x         //删除当前字符

nx        //删除从光标开始的n个字符

dd        //删除当前行

ndd       //向下删除当前行在内的n行

u         //撤销上一步操作

U         //撤销对当前行的所有操作


/cszhi    //向光标下搜索cszhi字符串

?cszhi    //向光标上搜索cszhi字符串

n         //向下搜索前一个搜素动作

N         //向上搜索前一个搜索动作
n+//向下跳n行

n-//向上跳n行

nG        //跳到行号为n的行

G         //跳至文件的底部

n+//向下跳n行

n-//向上跳n行

nG        //跳到行号为n的行

G         //跳至文件的底部

yy    //将当前行复制到缓存区，也可以用 "ayy 复制，"a 为缓冲区，a也可以替换为a到z         的任意字母，可以完成多个复制任务

nyy   //将当前行向下n行复制到缓冲区，也可以用 "anyy 复制，"a 为缓冲区，a也可以替         换为a到z的任意字母，可以完成多个复制任务

yw    //复制从光标开始到词尾的字符

nyw   //复制从光标开始的n个单词

y^    //复制从光标到行首的内容

y$    //复制从光标到行尾的内容

p     //粘贴剪切板里的内容在光标后，如果使用了前面的自定义缓冲区，建议使用"ap 进         行粘贴

P     //粘贴剪切板里的内容在光标前，如果使用了前面的自定义缓冲区，建议使用"aP 进         行粘贴


:s/old/new//用new替换行中首次出现的old

:s/old/new/g        //用new替换行中所有的old

:n,m s/old/new/g    //用new替换从n到m行里所有的old

:%s/old/new/g       //用new替换当前文件里所有的old

:set fileformat=unix   //将文件修改为unix格式，如win下面的文本文件在linux下会出现^M




vi first_shell.sh  打开一个文件，sh后缀表示shell脚本
#!/bin.bash  表明这是一个shell脚本
#file name
#function
#author 


运行前 chmod +x  文件名
$#  代表传入函数的参数个数
$@ 代表传入函数的参数内容
./文件名表示调用文件   后面跟的 表示传递的参数  
文本文件可以不要分号的大括号以及函数名 只要用函数体就可以
$1 表示第一个参数以此类推到9
$0表示文件名
~运行时候会被扩展为$HOME目录
mv [options] ... Source ....dir   最后一个参数是一个已经存在的目录，Source ./需要移动的文件名      将改文件移动到想要移动到的目录下
把mv命令绑定刀mv -i比较安全，避免错误的覆盖

Command>file     将command的标准输出重定向到目标文件中，而不是打印在控制台
Command<file     将command 的标准输入重定向修改为file
Command>>file   可将command的输出追加到文件file的末尾

|建立管道   

例子 head -n10 /etc/passwd | grep "prince"
head -nx 读取前x行    head 命令不传参数默认显示前10行
（读取/etc/passwd文件中的前10行，将读取的内容从输出端 沿着管道输出到grep 的输入端，然后检索包含文本prince的行）

/dev/null 黑洞文件，是个只写文件可以通过重定向，来清空文件内容 并且不改变权限
/dev/tty  输出到null 又需要在终端上显示一些很重要的信息 可以将信息强制显示到终端
stty -echo 关闭自动打印输入字符的功能
stty echo 开启自动打印输入字符的功能
read 从标准输入读取一行
grep 命令文本检索

一切皆文件

/dev/tty  转换操作终端
/dev/sda 交互操作硬盘
/dev/sound 交互操作音箱

ls显示目录或文件名的内容

${a/b/c}   将a中的b替换成c

=左右不能有空格
引用变量 必须要$+变量名
path// xxx  /  str    根据xxx分割     若str为空删xxx  否则用str替换xxx







